# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
#
#      - name: Run unit tests
#        run: ./gradlew clean testDebug

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload Html report
        uses: actions/upload-artifact@v4
        with:
          name: index.html
          path: app/build/report/lint-result-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew test

      - name: Upload Html report
        uses: actions/upload-artifact@v4
        with:
          name: testReport.html
          path: app/build/report/tests/testDebugUnitTest/


  package:
    needs: [unit-test]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload Apk
        uses: actions/upload-artifact@v4
        with:
          name: myPaint.apk
          path: app/build/outputs/apk/debug/app-debug.apk

    # Runs a single command using the runners shell